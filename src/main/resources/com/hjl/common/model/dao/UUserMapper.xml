<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hjl.common.model.dao.UUserMapper">
	<resultMap id="BaseResultMap" type="com.hjl.common.model.domain.UUser">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="username" property="username" jdbcType="VARCHAR"/>
		<result column="email" property="email" jdbcType="VARCHAR"/>
		<result column="nickname" property="nickname" jdbcType="VARCHAR"/>
		<result column="pswd" property="pswd" jdbcType="VARCHAR"/>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
		<result column="status" property="status" jdbcType="BIGINT"/>
	</resultMap>
	<sql id="Base_Column_List">
    id, username, email, nickname, pswd, create_time, last_login_time, `status`
  </sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List"/>
		from `shiro-stu`.u_user
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from `shiro-stu`.u_user
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `shiro-stu`.u_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
	<insert id="insert" parameterType="com.hjl.common.model.domain.UUser">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into `shiro-stu`.u_user (id, username, email,
		nickname, pswd, create_time,
		last_login_time, `status`)
		values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR}, #{pswd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{lastLoginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.hjl.common.model.domain.UUser">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into `shiro-stu`.u_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			<if test="username != null">
				username,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="pswd != null">
				pswd,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="status != null">
				`status`,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=BIGINT},
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="pswd != null">
				#{pswd,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.hjl.common.model.domain.UUser">
		update `shiro-stu`.u_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="pswd != null">
				pswd = #{pswd,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				`status` = #{status,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hjl.common.model.domain.UUser">
    update `shiro-stu`.u_user
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      pswd = #{pswd,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
	
	<select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from `shiro-stu`.u_user
		where
		username = #{username,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectPermissionsByUserId" resultType="java.lang.String" parameterType="java.lang.Long">
		SELECT
			up.url
		FROM
			`shiro-stu`.u_permission up,
			`shiro-stu`.u_role_permission urp,
			`shiro-stu`.u_user_role uur
		WHERE
			uur.uid = #{userId}
		AND uur.rid = urp.rid
		AND urp.pid = up.id
  </select>
	
	<select id="selectPermissionsByUserName" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT
			up.url
		FROM
			u_permission up,
			u_role_permission urp,
			u_user_role uur,
			u_user uu
		WHERE
			uu.username = #{username}
		and
			uu.id = uur.uid
		AND uur.rid = urp.rid
		AND urp.pid = up.id
	</select>
	
	
	
	<select id="login" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List"/>
		from `shiro-stu`.u_user
		where
		username = #{username,jdbcType=VARCHAR}
		and
		password = #{password ,jdbcType=VARCHAR}
	</select>
	

</mapper>